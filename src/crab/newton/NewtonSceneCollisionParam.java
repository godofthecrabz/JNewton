// Generated by jextract

package crab.newton;

import java.lang.invoke.VarHandle;
import java.lang.foreign.*;
import crab.newton.internal.*;
/**
 * {@snippet :
 * struct NewtonSceneCollisionParam {
 *     int m_childrenProxyCount;
 * };
 * }
 */
public class NewtonSceneCollisionParam {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("m_childrenProxyCount")
    ).withName("NewtonSceneCollisionParam");
    public static MemoryLayout $LAYOUT() {
        return NewtonSceneCollisionParam.$struct$LAYOUT;
    }
    static final VarHandle m_childrenProxyCount$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("m_childrenProxyCount"));
    public static VarHandle m_childrenProxyCount$VH() {
        return NewtonSceneCollisionParam.m_childrenProxyCount$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int m_childrenProxyCount;
     * }
     */
    public static int m_childrenProxyCount$get(MemorySegment seg) {
        return (int)NewtonSceneCollisionParam.m_childrenProxyCount$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int m_childrenProxyCount;
     * }
     */
    public static void m_childrenProxyCount$set(MemorySegment seg, int x) {
        NewtonSceneCollisionParam.m_childrenProxyCount$VH.set(seg, x);
    }
    public static int m_childrenProxyCount$get(MemorySegment seg, long index) {
        return (int)NewtonSceneCollisionParam.m_childrenProxyCount$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void m_childrenProxyCount$set(MemorySegment seg, long index, int x) {
        NewtonSceneCollisionParam.m_childrenProxyCount$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


