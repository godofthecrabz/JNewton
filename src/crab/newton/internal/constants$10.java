// Generated by jextract

package crab.newton.internal;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;
import crab.newton.callbacks.*;
public final class constants$10 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$10() {}
    public static final FunctionDescriptor NewtonBodyDestructor$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    public static final FunctionDescriptor NewtonBodyDestructor_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonBodyDestructor_UP$MH = RuntimeHelper.upcallHandle(NewtonBodyDestructor.class, "apply", constants$10.NewtonBodyDestructor_UP$FUNC);
    public static final FunctionDescriptor NewtonBodyDestructor_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonBodyDestructor_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$10.NewtonBodyDestructor_DOWN$FUNC
    );
    public static final FunctionDescriptor NewtonApplyForceAndTorque$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final FunctionDescriptor NewtonApplyForceAndTorque_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final MethodHandle NewtonApplyForceAndTorque_UP$MH = RuntimeHelper.upcallHandle(NewtonApplyForceAndTorque.class, "apply", constants$10.NewtonApplyForceAndTorque_UP$FUNC);
    public static final FunctionDescriptor NewtonApplyForceAndTorque_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final MethodHandle NewtonApplyForceAndTorque_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$10.NewtonApplyForceAndTorque_DOWN$FUNC
    );
    public static final FunctionDescriptor NewtonSetTransform$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final FunctionDescriptor NewtonSetTransform_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final MethodHandle NewtonSetTransform_UP$MH = RuntimeHelper.upcallHandle(NewtonSetTransform.class, "apply", constants$10.NewtonSetTransform_UP$FUNC);
    public static final FunctionDescriptor NewtonSetTransform_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final MethodHandle NewtonSetTransform_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$10.NewtonSetTransform_DOWN$FUNC
    );
}


