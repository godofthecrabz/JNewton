// Generated by jextract

package crab.newton.internal;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;
import crab.newton.callbacks.*;
public final class constants$0 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$0() {}
    public static final FunctionDescriptor NewtonAllocMemory$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final FunctionDescriptor NewtonAllocMemory_UP$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final MethodHandle NewtonAllocMemory_UP$MH = RuntimeHelper.upcallHandle(NewtonAllocMemory.class, "apply", constants$0.NewtonAllocMemory_UP$FUNC);
    public static final FunctionDescriptor NewtonAllocMemory_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final MethodHandle NewtonAllocMemory_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$0.NewtonAllocMemory_DOWN$FUNC
    );
    public static final FunctionDescriptor NewtonFreeMemory$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final FunctionDescriptor NewtonFreeMemory_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final MethodHandle NewtonFreeMemory_UP$MH = RuntimeHelper.upcallHandle(NewtonFreeMemory.class, "apply", constants$0.NewtonFreeMemory_UP$FUNC);
    public static final FunctionDescriptor NewtonFreeMemory_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final MethodHandle NewtonFreeMemory_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$0.NewtonFreeMemory_DOWN$FUNC
    );
    public static final FunctionDescriptor NewtonWorldDestructorCallback$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    public static final FunctionDescriptor NewtonWorldDestructorCallback_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonWorldDestructorCallback_UP$MH = RuntimeHelper.upcallHandle(NewtonWorldDestructorCallback.class, "apply", constants$0.NewtonWorldDestructorCallback_UP$FUNC);
    public static final FunctionDescriptor NewtonWorldDestructorCallback_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonWorldDestructorCallback_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$0.NewtonWorldDestructorCallback_DOWN$FUNC
    );
}


