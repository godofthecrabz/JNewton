// Generated by jextract

package crab.newton.internal;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;
import crab.newton.callbacks.*;
public final class constants$11 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$11() {}
    public static final FunctionDescriptor NewtonIslandUpdate$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final FunctionDescriptor NewtonIslandUpdate_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final MethodHandle NewtonIslandUpdate_UP$MH = RuntimeHelper.upcallHandle(NewtonIslandUpdate.class, "apply", constants$11.NewtonIslandUpdate_UP$FUNC);
    public static final FunctionDescriptor NewtonIslandUpdate_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final MethodHandle NewtonIslandUpdate_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$11.NewtonIslandUpdate_DOWN$FUNC
    );
    public static final FunctionDescriptor NewtonFractureCompoundCollisionOnEmitCompoundFractured$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    public static final FunctionDescriptor NewtonFractureCompoundCollisionOnEmitCompoundFractured_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonFractureCompoundCollisionOnEmitCompoundFractured_UP$MH = RuntimeHelper.upcallHandle(NewtonFractureCompoundCollisionOnEmitCompoundFractured.class, "apply", constants$11.NewtonFractureCompoundCollisionOnEmitCompoundFractured_UP$FUNC);
    public static final FunctionDescriptor NewtonFractureCompoundCollisionOnEmitCompoundFractured_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonFractureCompoundCollisionOnEmitCompoundFractured_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$11.NewtonFractureCompoundCollisionOnEmitCompoundFractured_DOWN$FUNC
    );
    public static final FunctionDescriptor NewtonFractureCompoundCollisionOnEmitChunk$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    public static final FunctionDescriptor NewtonFractureCompoundCollisionOnEmitChunk_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonFractureCompoundCollisionOnEmitChunk_UP$MH = RuntimeHelper.upcallHandle(NewtonFractureCompoundCollisionOnEmitChunk.class, "apply", constants$11.NewtonFractureCompoundCollisionOnEmitChunk_UP$FUNC);
    public static final FunctionDescriptor NewtonFractureCompoundCollisionOnEmitChunk_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonFractureCompoundCollisionOnEmitChunk_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$11.NewtonFractureCompoundCollisionOnEmitChunk_DOWN$FUNC
    );
}


