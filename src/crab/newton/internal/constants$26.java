// Generated by jextract

package crab.newton.internal;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;
import crab.newton.callbacks.*;
public final class constants$26 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$26() {}
    public static final FunctionDescriptor NewtonSerializeToFile$bodyCallback_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonSerializeToFile$bodyCallback_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$26.NewtonSerializeToFile$bodyCallback_DOWN$FUNC
    );
    public static final FunctionDescriptor NewtonSerializeToFile$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonSerializeToFile$MH = RuntimeHelper.downcallHandle(
        "NewtonSerializeToFile",
        constants$26.NewtonSerializeToFile$FUNC
    );
    public static final FunctionDescriptor NewtonDeserializeFromFile$bodyCallback$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    public static final FunctionDescriptor NewtonDeserializeFromFile$bodyCallback_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonDeserializeFromFile$bodyCallback_UP$MH = RuntimeHelper.upcallHandle(NewtonDeserializeFromFile$bodyCallback.class, "apply", constants$26.NewtonDeserializeFromFile$bodyCallback_UP$FUNC);
    public static final FunctionDescriptor NewtonDeserializeFromFile$bodyCallback_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonDeserializeFromFile$bodyCallback_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$26.NewtonDeserializeFromFile$bodyCallback_DOWN$FUNC
    );
    public static final FunctionDescriptor NewtonDeserializeFromFile$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonDeserializeFromFile$MH = RuntimeHelper.downcallHandle(
        "NewtonDeserializeFromFile",
        constants$26.NewtonDeserializeFromFile$FUNC
    );
    public static final FunctionDescriptor NewtonSerializeScene$bodyCallback$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    public static final FunctionDescriptor NewtonSerializeScene$bodyCallback_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonSerializeScene$bodyCallback_UP$MH = RuntimeHelper.upcallHandle(NewtonSerializeScene$bodyCallback.class, "apply", constants$26.NewtonSerializeScene$bodyCallback_UP$FUNC);
}


