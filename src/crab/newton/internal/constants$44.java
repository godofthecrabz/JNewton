// Generated by jextract

package crab.newton.internal;

import java.lang.invoke.MethodHandle;
import java.lang.foreign.*;
import crab.newton.callbacks.*;
public final class constants$44 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$44() {}
    public static final FunctionDescriptor NewtonMaterialDestroyAllGroupID$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonMaterialDestroyAllGroupID$MH = RuntimeHelper.downcallHandle(
        "NewtonMaterialDestroyAllGroupID",
        constants$44.NewtonMaterialDestroyAllGroupID$FUNC
    );
    public static final FunctionDescriptor NewtonMaterialGetUserData$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final MethodHandle NewtonMaterialGetUserData$MH = RuntimeHelper.downcallHandle(
        "NewtonMaterialGetUserData",
        constants$44.NewtonMaterialGetUserData$FUNC
    );
    public static final FunctionDescriptor NewtonMaterialSetSurfaceThickness$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_FLOAT$LAYOUT
    );
    public static final MethodHandle NewtonMaterialSetSurfaceThickness$MH = RuntimeHelper.downcallHandle(
        "NewtonMaterialSetSurfaceThickness",
        constants$44.NewtonMaterialSetSurfaceThickness$FUNC
    );
    public static final FunctionDescriptor NewtonMaterialSetCallbackUserData$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    public static final MethodHandle NewtonMaterialSetCallbackUserData$MH = RuntimeHelper.downcallHandle(
        "NewtonMaterialSetCallbackUserData",
        constants$44.NewtonMaterialSetCallbackUserData$FUNC
    );
    public static final FunctionDescriptor NewtonMaterialSetContactGenerationCallback$contactGeneration$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final FunctionDescriptor NewtonMaterialSetContactGenerationCallback$contactGeneration_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final MethodHandle NewtonMaterialSetContactGenerationCallback$contactGeneration_UP$MH = RuntimeHelper.upcallHandle(NewtonMaterialSetContactGenerationCallback$contactGeneration.class, "apply", constants$44.NewtonMaterialSetContactGenerationCallback$contactGeneration_UP$FUNC);
    public static final FunctionDescriptor NewtonMaterialSetContactGenerationCallback$contactGeneration_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    public static final MethodHandle NewtonMaterialSetContactGenerationCallback$contactGeneration_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$44.NewtonMaterialSetContactGenerationCallback$contactGeneration_DOWN$FUNC
    );
}


