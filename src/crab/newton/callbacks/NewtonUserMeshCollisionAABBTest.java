// Generated by jextract

package crab.newton.callbacks;

import java.lang.foreign.*;
import crab.newton.internal.*;
/**
 * {@snippet :
 * int (*NewtonUserMeshCollisionAABBTest)(void* userData,float* boxP0,float* boxP1);
 * }
 */
public interface NewtonUserMeshCollisionAABBTest {

    int apply(java.lang.foreign.MemorySegment userData, java.lang.foreign.MemorySegment boxP0, java.lang.foreign.MemorySegment boxP1);
    static MemorySegment allocate(NewtonUserMeshCollisionAABBTest fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$7.NewtonUserMeshCollisionAABBTest_UP$MH, fi, constants$7.NewtonUserMeshCollisionAABBTest$FUNC, scope);
    }
    static NewtonUserMeshCollisionAABBTest ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _userData, java.lang.foreign.MemorySegment _boxP0, java.lang.foreign.MemorySegment _boxP1) -> {
            try {
                return (int)constants$7.NewtonUserMeshCollisionAABBTest_DOWN$MH.invokeExact(symbol, _userData, _boxP0, _boxP1);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


