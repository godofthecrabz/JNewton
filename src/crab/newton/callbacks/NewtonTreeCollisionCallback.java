package crab.newton.callbacks;// Generated by jextract

import java.lang.foreign.*;
import crab.newton.internal.*;

public interface NewtonTreeCollisionCallback {

    void apply(java.lang.foreign.MemoryAddress bodyWithTreeCollision, java.lang.foreign.MemoryAddress body, int faceID, int vertexCount, java.lang.foreign.MemoryAddress vertex, int vertexStrideInBytes);
    static MemorySegment allocate(NewtonTreeCollisionCallback fi, MemorySession session) {
        return RuntimeHelper.upcallStub(NewtonTreeCollisionCallback.class, fi, constants$9.NewtonTreeCollisionCallback$FUNC, session);
    }
    static NewtonTreeCollisionCallback ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _bodyWithTreeCollision, java.lang.foreign.MemoryAddress _body, int _faceID, int _vertexCount, java.lang.foreign.MemoryAddress _vertex, int _vertexStrideInBytes) -> {
            try {
                constants$9.NewtonTreeCollisionCallback$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_bodyWithTreeCollision, (java.lang.foreign.Addressable)_body, _faceID, _vertexCount, (java.lang.foreign.Addressable)_vertex, _vertexStrideInBytes);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


