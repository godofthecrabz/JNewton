package crab.newton.callbacks;// Generated by jextract

import java.lang.foreign.*;
import crab.newton.internal.*;

public interface NewtonTreeCollisionFaceCallback {

    int apply(java.lang.foreign.MemoryAddress context, java.lang.foreign.MemoryAddress polygon, int strideInBytes, java.lang.foreign.MemoryAddress indexArray, int indexCount);
    static MemorySegment allocate(NewtonTreeCollisionFaceCallback fi, MemorySession session) {
        return RuntimeHelper.upcallStub(NewtonTreeCollisionFaceCallback.class, fi, constants$8.NewtonTreeCollisionFaceCallback$FUNC, session);
    }
    static NewtonTreeCollisionFaceCallback ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _context, java.lang.foreign.MemoryAddress _polygon, int _strideInBytes, java.lang.foreign.MemoryAddress _indexArray, int _indexCount) -> {
            try {
                return (int)constants$8.NewtonTreeCollisionFaceCallback$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_context, (java.lang.foreign.Addressable)_polygon, _strideInBytes, (java.lang.foreign.Addressable)_indexArray, _indexCount);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


