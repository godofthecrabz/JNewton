// Generated by jextract

package crab.newton.callbacks;

import java.lang.foreign.*;
import crab.newton.internal.*;
/**
 * {@snippet :
 * void (*NewtonCreateContactCallback)(struct NewtonWorld* newtonWorld,struct NewtonJoint* contact);
 * }
 */
public interface NewtonCreateContactCallback {

    void apply(java.lang.foreign.MemorySegment userJoint, java.lang.foreign.MemorySegment info);
    static MemorySegment allocate(NewtonCreateContactCallback fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$1.NewtonCreateContactCallback_UP$MH, fi, constants$1.NewtonCreateContactCallback$FUNC, scope);
    }
    static NewtonCreateContactCallback ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _userJoint, java.lang.foreign.MemorySegment _info) -> {
            try {
                constants$1.NewtonCreateContactCallback_DOWN$MH.invokeExact(symbol, _userJoint, _info);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


