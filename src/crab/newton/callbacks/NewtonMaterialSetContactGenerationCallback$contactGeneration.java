// Generated by jextract

package crab.newton.callbacks;

import java.lang.foreign.*;
import crab.newton.internal.*;
/**
 * {@snippet :
 * int (*NewtonMaterialSetContactGenerationCallback$contactGeneration)(struct NewtonMaterial*,struct NewtonBody*,struct NewtonCollision*,struct NewtonBody*,struct NewtonCollision*,struct NewtonUserContactPoint*,int,int);
 * }
 */
public interface NewtonMaterialSetContactGenerationCallback$contactGeneration {

    int apply(java.lang.foreign.MemorySegment material, java.lang.foreign.MemorySegment body0, java.lang.foreign.MemorySegment collision0, java.lang.foreign.MemorySegment body1, java.lang.foreign.MemorySegment collision1, java.lang.foreign.MemorySegment contactBuffer, int maxCount, int threadIndex);
    static MemorySegment allocate(NewtonMaterialSetContactGenerationCallback$contactGeneration fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$44.NewtonMaterialSetContactGenerationCallback$contactGeneration_UP$MH, fi, constants$44.NewtonMaterialSetContactGenerationCallback$contactGeneration$FUNC, scope);
    }
    static NewtonMaterialSetContactGenerationCallback$contactGeneration ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _material, java.lang.foreign.MemorySegment _body0, java.lang.foreign.MemorySegment _collision0, java.lang.foreign.MemorySegment _body1, java.lang.foreign.MemorySegment _collision1, java.lang.foreign.MemorySegment _contactBuffer, int _maxCount, int _threadIndex) -> {
            try {
                return (int)constants$44.NewtonMaterialSetContactGenerationCallback$contactGeneration_DOWN$MH.invokeExact(symbol, _material, _body0, _collision0, _body1, _collision1, _contactBuffer, _maxCount, _threadIndex);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


