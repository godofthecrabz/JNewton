// Generated by jextract

package crab.newton.callbacks;

import java.lang.foreign.*;
import crab.newton.internal.*;
/**
 * {@snippet :
 * float (*NewtonCreateUserMeshCollision$rayHitCallback)(struct NewtonUserMeshCollisionRayHitDesc*);
 * }
 */
public interface NewtonCreateUserMeshCollision$rayHitCallback {

    float apply(java.lang.foreign.MemorySegment lineDescData);
    static MemorySegment allocate(NewtonCreateUserMeshCollision$rayHitCallback fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$64.NewtonCreateUserMeshCollision$rayHitCallback_UP$MH, fi, constants$64.NewtonCreateUserMeshCollision$rayHitCallback$FUNC, scope);
    }
    static NewtonCreateUserMeshCollision$rayHitCallback ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _lineDescData) -> {
            try {
                return (float)constants$64.NewtonCreateUserMeshCollision$rayHitCallback_DOWN$MH.invokeExact(symbol, _lineDescData);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


