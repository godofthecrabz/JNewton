package crab.newton.callbacks;// Generated by jextract

import java.lang.foreign.*;
import crab.newton.internal.*;

public interface NewtonCollisionIterator {

    void apply(java.lang.foreign.MemoryAddress userData, int vertexCount, java.lang.foreign.MemoryAddress faceArray, int faceId);
    static MemorySegment allocate(NewtonCollisionIterator fi, MemorySession session) {
        return RuntimeHelper.upcallStub(NewtonCollisionIterator.class, fi, constants$15.NewtonCollisionIterator$FUNC, session);
    }
    static NewtonCollisionIterator ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _userData, int _vertexCount, java.lang.foreign.MemoryAddress _faceArray, int _faceId) -> {
            try {
                constants$15.NewtonCollisionIterator$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_userData, _vertexCount, (java.lang.foreign.Addressable)_faceArray, _faceId);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


